@tailwind base;
@tailwind components;
@tailwind utilities;

@property --houdini-colorA {
    syntax: '<color>';
    inherits: false;
    initial-value: #fff;
}

@property --houdini-colorB {
    syntax: '<color>';
    inherits: false;
    initial-value: #000;
}

.property {
    background: linear-gradient(45deg, var(--houdini-colorA), var(--houdini-colorB));
    transition: 1s --houdini-colorA, 1s --houdini-colorB;
}

.property:hover {
    --houdini-colorA: yellowgreen;
    --houdini-colorB: deeppink;
}

input {
    color: #000;
}

.game-container {
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;
}

.card-container {
    perspective: 1000;
    transform-style: preserve-3d;
    margin-bottom: 20px;
}

.card {
    height: 100px;
    line-height: 100px;
    width: 100px;
    border-radius: 4px;
    position: relative;
    transition: 1s;
    transform: rotateY(0);
    transform-style: preserve-3d;
}

.card-back, .card-front {
    height: 100%;
    width: 100%;
    border-radius: 4px;
    overflow: hidden;
    position: absolute;
    top: 0;
    left: 0;
    backface-visibility: hidden;
}

.card-back img, .card-front img {
    height: 100%;
    width: 100%;
}

.card-front {
    z-index: 2;
}

.card-back {
    font-size: 36px;
    transform: rotateY(-180deg);
}

/* .card-container:hover .card {
    transform: rotateY(180deg);
} */

.flip {
    transform: rotateY(180deg);
}

.modal-root {
    display: none;
}

.visibled {
    display: block;
}

.modal-mask {
    position: fixed;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: 1000;
    height: 100%;
    background-color: #00000073;
}

.modal-wrap {
    z-index: 1000;
    position: fixed;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    overflow: auto;
    outline: 0;
    -webkit-overflow-scrolling: touch;
}

.modal {
    width: 80%;
    box-sizing: border-box;
    padding: 0 0 24px;
    color: #000000d9;
    font-size: 14px;
    font-variant: tabular-nums;
    line-height: 1.5715;
    list-style: none;
    font-feature-settings: "tnum";
    pointer-events: none;
    position: relative;
    top: 100px;
    max-width: calc(100vw - 32px);
    margin: 0 auto;
}

.modal-content {
    position: relative;
    background-color: rgba(255, 251, 235, 1);
    background-clip: padding-box;
    border: 0;
    border-radius: 4px;
    box-shadow: 0 3px 6px -4px #0000001f, 0 6px 16px #00000014, 0 9px 28px 8px #0000000d;
    pointer-events: auto;
}

.modal-body {
    padding: 24px;
    font-size: 14px;
    line-height: 1.5715;
    word-wrap: break-word;
    padding: 24px;
}

.modal-footer {
    padding: 0 24px 16px;
    text-align: center;
}

button {
    color: #f3f4f6;
    background: #818cf8;
    border-color: #818cf8;
    text-shadow: 0 -1px 0 rgb(0 0 0 / 12%);
    box-shadow: 0 2px #0000000b;
    line-height: 1.5715;
    position: relative;
    display: inline-block;
    font-weight: 400;
    white-space: nowrap;
    text-align: center;
    background-image: none;
    border: 1px solid transparent;
    box-shadow: 0 2px #00000004;
    cursor: pointer;
    transition: all .3s cubic-bezier(.645,.045,.355,1);
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    touch-action: manipulation;
    height: 32px;
    padding: 4px 16px;
    font-size: 14px;
    border-radius: 2px;
}

button:active {
    outline: 0;
    box-shadow: none;
    color: #f3f4f6;
    background: #6366f1;
    border-color: #6366f1;
}

button:focus, button:hover {
    outline: 0;
    color: #f3f4f6;
    background: #6366f1;
    border-color: #6366f1;
    text-decoration: none;
}

.fadeIn {
    animation: fadeIn .5s ease-in;
}

.fadeOut {
    animation: fadeOut .5s ease-in;
}

.zoomIn {
    animation: zoomIn .5s ease-in;
}

.zoomOut {
    animation: zoomOut .5s ease-in;
}

@keyframes fadeIn {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

@keyframes fadeOut {
    from {
        opacity: 1;
    }
    to {
        opacity: 0;
    }
}

@keyframes zoomIn {
    from {
        opacity: 0;
        transform: scale3d(0, 0, 1);
    }

    to {
        opacity: 1;
        transform: scale3d(1, 1, 1);
    }
}

@keyframes zoomOut {
    from {
        opacity: 1;
        transform: scale3d(1, 1, 1);
    }

    to {
        opacity: 0;
        transform: scale3d(0, 0, 1);
    }
}
